pipeline {
  agent{
    docker {
            image 'ashaik65/maven-anis-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'                      // mount Docker socket to access the host's Docker daemon

    }
  }
  stages
  {
    stage('Checkout'){
      steps{
        
        git branch: 'master', url: 'https://github.com/panduranguser/Devops-Sessions.git' 
        sh'echo passed'

      }
    }
    stage('build and test')
    {
     steps{
      sh 'ls -ltr'
      sh 'cd jenkins-argocd/spring-boot-app && mvn clean package'
     }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://54.234.188.247:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd jenkins-argocd/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('build and push docker image'){
      environment{
        DOCKER_IMAGE = "paddy6078/argocd-app:${BUILD_NUMBER}"
        REGISTRY_CREDINTIALS = credentials('docker-cred')
      }
      steps {
        script {
           sh 'cd jenkins-argocd/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://registry.hub.docker.com', "docker-cred") {
                dockerImage.push()
        }
      }
      }
    }
      stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "Devops-Sessions"
            GIT_USER_NAME = "panduranguser"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "paddy@gmail.com"
                    git config user.name "paddy"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" jenkins-argocd/spring-boot-app-manifests/deployment.yml
                    git status
                    git add jenkins-argocd/spring-boot-app-manifests/deployment.yml
                    git status
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
                '''
            }
        }
    }
}
}