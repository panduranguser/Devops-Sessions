pipeline {
  agent{
    docker {
            image 'ashaik65/maven-anis-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'                      // mount Docker socket to access the host's Docker daemon

    }
  }
  stages
  {
    stage('Checkout'){
      steps{
        
        git branch: 'master', url: 'https://github.com/panduranguser/Devops-Sessions.git' 
        sh'echo passed'

      }
    }
    stage('build and test')
    {
     steps{
      sh 'ls -ltr'
      sh 'cd jenkins-argocd/spring-boot-app && mvn clean package'
     }
    }
    stage('static code analysis')
    {
      environment {
        SONAR_URL = "http://54.234.188.247:9000"

      }
      steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                sh 'cd jenkins-argocd/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
      }
    }
  }
}
}