pipeline {
  agent {
    docker {

      image 'ashaik65/maven-anis-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'                      // mount Docker socket to access the host's Docker daemon
    }
  }
    stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'

      }
    }
}
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'

      sh 'cd jenkins-argocd/spring-boot-app && mvn clean package'
      }
    }
        stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://54.172.107.179:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd jenkins-argocd/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }







}




  
